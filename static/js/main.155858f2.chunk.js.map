{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$placeholder","placeholder","concat","_ref$required","required","pattern","_ref$onChange","onChange","_useState","useState","Math","random","toFixed","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","hasUrlError","test","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","initialState","movieState","setMovieState","isFormFilled","trim","addNewValue","field","newMovie","_objectSpread","_defineProperty","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","currentMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.155858f2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  pattern?: RegExp,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  pattern,\n  onChange = () => { },\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  const hasUrlError = pattern && !pattern?.test(value) && touched;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasUrlError && (\n        <p className=\"help is-danger\">Enter valid URL adress</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n\n  const initialState = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [movieState, setMovieState] = useState<Movie>(initialState);\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const isFormFilled = !movieState.title.trim()\n  || !movieState.imgUrl.trim()\n  || !movieState.imdbUrl.trim()\n  || !movieState.imdbId.trim()\n  || !pattern.test(movieState.imdbUrl)\n  || !pattern.test(movieState.imgUrl);\n\n  const addNewValue = (field: string, value: string) => {\n    setMovieState(newMovie => ({\n      ...newMovie,\n      [field]: value,\n    }));\n  };\n\n  const handleAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (isFormFilled) {\n      return;\n    }\n\n    onAdd(movieState);\n\n    setMovieState(initialState);\n    setCount(count + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleAdd}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movieState.title}\n        onChange={(value) => addNewValue('title', value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movieState.description}\n        onChange={(value) => addNewValue('description', value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movieState.imgUrl}\n        onChange={(value) => addNewValue('imgUrl', value)}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movieState.imdbUrl}\n        onChange={(value) => addNewValue('imdbUrl', value)}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movieState.imdbId}\n        onChange={(value) => addNewValue('imdbId', value)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isFormFilled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}